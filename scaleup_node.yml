- name: VM provision
  hosts: bastion
  vars:
    nodename: "{{  morpheus['customOptions']['nodename'] }}"
    IPaddress: "{{ morpheus['customOptions']['Ipaddress'] }}"
    kubeconfig: "{{ morpheus['customOptions']['kubeconfig'] }}"
  tasks:
    - name: Clone from openshift cluster
      vmware_guest:
        hostname: "{{ vcenter.host }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        validate_certs: no
        datacenter: "{{ vcenter.datacenter }}"
        folder: "{{ vcenter.folder }}"
        cluster: "{{ vcenter.cluster }}"
        template: "{{ openshift_template_name }}"
        #name: "{{ item.name }}.{{ openshift_cluster_name }}.{{ openshift_base_domain }}"
        name: "{{ nodename }}"
        state: "poweredoff"
        disk:
        - datastore: "{{ vcenter.default_datastore }}"
          type: "{{ worker_node.disk.type }}"
          size_gb: "{{ worker_node.disk.size | default(120) }}"
        hardware:
          memory_mb: "{{ worker_node.ram | default(16384) }}"
          memory_reservation_lock: true
          memory_reservation: "{{ bootstrap_node.ram }}"
          num_cpus: "{{ worker_node.cpus | default(4) }}"
        #networks:
        #- name: "{{ vcenter.network }}"
        wait_for_ip_address: no
        customvalues: 
          - key: "sched.cpu.latencySensitivity"
            value: "normal"
          - key: "guestinfo.afterburn.initrd.network-kargs"
            value: "ip={{ item.ipaddr }}::{{ vcenter.gateway }}:{{ vcenter.netmask }}:{{ nodename }}.{{ openshift_cluster_name }}.{{ openshift_base_domain }}:ens192:off:{{ vcenter.dns }}"               
          - key: "disk.EnableUUID"
            value: "TRUE"
          - key: "guestinfo.ignition.config.data.encoding"
            value: "base64"        
          - key: "guestinfo.ignition.config.data"
            value: "{{ ignition_value }}"
          #   value: "ip={{ IPaddress }}::{{ vcenter.gateway  }}:{{ vcenter.netmask }}:{{ item.name }}:none:{{ vcenter.dns  }}"

      
    - name: Configure network for worker nodes
      vmware_guest_network:
        hostname: "{{ vcenter.host }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        datacenter: "{{ vcenter.datacenter }}"
        validate_certs: no
        name: "{{ nodename }}"
        networks:
          - name: "{{ vcenter.network }}"
            #manual_mac: "{{ item.macaddress }}"
            label: "Network adapter 1"
            state: present
            start_connected: true

    - name: Power-On the worker VMs
      vmware_guest:
        hostname: "{{ vcenter.host }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        datacenter: "{{ vcenter.datacenter }}"
        validate_certs: no
        folder: "{{ vcenter.folder }}"
        name: "{{ nodename }}"
        state: poweredon
        
    - name: Pause for 10 minutes 
      ansible.builtin.pause:
        minutes: 10
    
    - name: approve csr pending request
      ansible.builtin.shell: |
        oc get csr -o name | xargs oc adm certificate approve     
      environment: 
        KUBECONFIG: "{{ kubeconfig }}"
          # /home/itopr/ocppl/auth/kubeconfig
      register: output


